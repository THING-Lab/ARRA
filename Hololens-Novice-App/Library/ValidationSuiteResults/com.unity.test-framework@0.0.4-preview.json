{"Type":4,"TestResult":1,"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:50 PM","Elapsed":13498,"Tests":[{"TestName":"API Validation","TestDescription":"Checks public API for style and changest that conflict with Semantic Versioning.","TestResult":"Failed","TestState":1,"TestOutput":[{"Type":2,"Output":"Compilation failed. Please fix any compilation errors."}],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:36 PM","Elapsed":1},{"TestName":"Assembly Definition Validation","TestDescription":"Validate Presence and Contents of Assembly Definition Files.","TestResult":"Succeeded","TestState":0,"TestOutput":[],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:36 PM","Elapsed":5},{"TestName":"ChangeLog Validation","TestDescription":"Validate Changelog contains entry for given package.","TestResult":"Failed","TestState":1,"TestOutput":[{"Type":2,"Output":"For '## [0.1.0] - 2017-MM-DD': Date '2017-MM-DD' does not follow ISO 8601 in 'C:\\ChadIsOkay\\Library\\PackageCache\\com.unity.test-framework@0.0.4-preview\\CHANGELOG.md'. Expecting format 'YYYY-MM-DD'. Update the date to one of the supported values. Read more about this error and potential solutions at https://docs.unity3d.com/Packages/com.unity.package-validation-suite@latest/index.html?preview=1&subfolder=/manual/changelog_validation_error.html%23date-is-not-valid"},{"Type":2,"Output":"No changelog entry for version `0.0.4-preview` was found in 'C:\\ChadIsOkay\\Library\\PackageCache\\com.unity.test-framework@0.0.4-preview\\CHANGELOG.md'. Please add or fix a section so you have a `## [0.0.4-preview] - YYYY-MM-DD` or `## [0.0.4] - YYYY-MM-DD` section. Read more about this error and potential solutions at https://docs.unity3d.com/Packages/com.unity.package-validation-suite@latest/index.html?preview=1&subfolder=/manual/changelog_validation_error.html%23no-changelog-entry-for-version-was-found"}],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:36 PM","Elapsed":13},{"TestName":"Package Diff Evaluation","TestDescription":"Produces a report of what's been changed in this version of the package.","TestResult":"NotRun","TestState":2,"TestOutput":[{"Type":0,"Output":"No previous package version. Skipping diff evaluation."}],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:36 PM","Elapsed":1},{"TestName":"Folder Structure Validation","TestDescription":"Verify that the folder structure meets expectations.","TestResult":"Succeeded","TestState":0,"TestOutput":[],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:36 PM","Elapsed":18},{"TestName":"License Validation","TestDescription":"Verify that licensing information is present, and filled out.","TestResult":"Succeeded","TestState":0,"TestOutput":[{"Type":1,"Output":"A LICENSE.md file exists in the package, but is in the wrong format.  Ensure the copyright year is set properly, otherwise, please check the package starter kit's license file as reference.  https://github.cds.internal.unity3d.com/unity/com.unity.package-validation-suite/blob/dev/LICENSE.md  It was `Test Framework copyright © 2018 Unity Technologies ApS` but was expecting `com.unity.test-framework copyright © 2020 Unity Technologies ApS` or `Test Framework copyright © 2020 Unity Technologies ApS`"}],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:36 PM","Elapsed":4},{"TestName":"Package Lifecycle Validation","TestDescription":"Validate that the pacakge respects the lifecycle transition guidelines.","TestResult":"Succeeded","TestState":0,"TestOutput":[],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:36 PM","Elapsed":1},{"TestName":"Documentation Validation","TestDescription":"Make sure the package has local documentation. It is required for a verified package and recommended for a preview package","TestResult":"Failed","TestState":1,"TestOutput":[{"Type":2,"Output":"Please rename your \"Documentation\" folder to \"Documentation~\" so that its files are ignored by the asset database."}],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:36 PM","Elapsed":1},{"TestName":"Manifest Validation","TestDescription":"Validate that the information found in the manifest is well formatted.","TestResult":"Failed","TestState":1,"TestOutput":[{"Type":2,"Output":"In package.json for a published package, there must be a \"repository.url\" field."},{"Type":2,"Output":"In package.json for a published package, there must be a \"repository.revision\" field."}],"StartTime":"3/12/2020 2:40:36 PM","EndTime":"3/12/2020 2:40:47 PM","Elapsed":10898},{"TestName":"Meta Files Validation","TestDescription":"Validate that metafiles are present for all package files.","TestResult":"Succeeded","TestState":0,"TestOutput":[],"StartTime":"3/12/2020 2:40:47 PM","EndTime":"3/12/2020 2:40:47 PM","Elapsed":93},{"TestName":"Path Length Validation","TestDescription":"Validate that all package files are below a maximum path threshold, to ensure that excessively long paths are not produced on Windows machines within user projects.","TestResult":"Succeeded","TestState":0,"TestOutput":[],"StartTime":"3/12/2020 2:40:47 PM","EndTime":"3/12/2020 2:40:48 PM","Elapsed":58},{"TestName":"Required File Type Validation","TestDescription":"Make sure required file types are included with this package.","TestResult":"Succeeded","TestState":0,"TestOutput":[],"StartTime":"3/12/2020 2:40:48 PM","EndTime":"3/12/2020 2:40:48 PM","Elapsed":1},{"TestName":"Restricted File Type Validation","TestDescription":"Make sure no restricted file types are included with this package.","TestResult":"Succeeded","TestState":0,"TestOutput":[],"StartTime":"3/12/2020 2:40:48 PM","EndTime":"3/12/2020 2:40:48 PM","Elapsed":721},{"TestName":"Samples Validation","TestDescription":"Verify that samples meet expectation, if the package has samples.","TestResult":"NotRun","TestState":2,"TestOutput":[{"Type":0,"Output":"No samples found. Skipping Samples Validation."}],"StartTime":"3/12/2020 2:40:48 PM","EndTime":"3/12/2020 2:40:48 PM","Elapsed":1},{"TestName":"Signature Validation","TestDescription":"Verify that the package has a valid signature associated with it.","TestResult":"NotImplementedYet","TestState":4,"TestOutput":[],"StartTime":"3/12/2020 2:40:48 PM","EndTime":"3/12/2020 2:40:48 PM","Elapsed":1},{"TestName":"API Updater Configuration Validation","TestDescription":"","TestResult":"Failed","TestState":1,"TestOutput":[{"Type":2,"Output":"Compilation failed. Please fix any compilation errors."}],"StartTime":"3/12/2020 2:40:48 PM","EndTime":"3/12/2020 2:40:48 PM","Elapsed":1},{"TestName":"Package Update Validation","TestDescription":"If this is an update, validate that the package's metadata is correct.","TestResult":"Failed","TestState":1,"TestOutput":[{"Type":2,"Output":"Version 0.0.4-preview of this package already exists in production."}],"StartTime":"3/12/2020 2:40:48 PM","EndTime":"3/12/2020 2:40:49 PM","Elapsed":1005},{"TestName":"Xmldoc Validation","TestDescription":"Checks public API to ensure xmldocs exist.","TestResult":"Failed","TestState":1,"TestOutput":[{"Type":2,"Output":"Compilation failed. Please fix any compilation errors."}],"StartTime":"3/12/2020 2:40:49 PM","EndTime":"3/12/2020 2:40:49 PM","Elapsed":1}]}